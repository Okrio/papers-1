% example
% calculate_phase_threshold(16000, 2048, 0.02, 343.0, 0.0, 20.0);
function [phi_target_minus, phi_target, phi_target_plus] ...
    = calculate_phase_threshold( ...
    sampling_rate_herz, ...
    fft_size, ...
    distance_between_microphones_meters, ...
    speed_of_sound_meters_per_sec, ...
    expected_target_angle_degrees, ...
    expected_target_angle_margin_degrees)
  % Obtain the phase threshold
  theta_target_minus = (expected_target_angle_degrees - ... 
      expected_target_angle_margin_degrees) * pi / 180.0;
  theta_target = expected_target_angle_degrees * pi / 180.0;
  theta_target_plus = (expected_target_angle_degrees + ... 
      expected_target_angle_margin_degrees) * pi / 180.0;

  % omega_k sin(\theta) f_s d / c_{air}
  omega_k = (2 * pi) * (0 : fft_size / 2)' / fft_size;
  phi_target_minus = omega_k .* sin(theta_target_minus) * sampling_rate_herz ... 
      * distance_between_microphones_meters / speed_of_sound_meters_per_sec;
  phi_target = omega_k .* sin(theta_target) * sampling_rate_herz ... 
      * distance_between_microphones_meters / speed_of_sound_meters_per_sec;
  phi_target_plus = omega_k .* sin(theta_target_plus) * sampling_rate_herz ... 
      * distance_between_microphones_meters / speed_of_sound_meters_per_sec;
end

